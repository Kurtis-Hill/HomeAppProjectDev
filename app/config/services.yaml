# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
imports:
    - { resource: elasticsearch.yaml }

parameters:
services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
          string $projectDir: '%kernel.project_dir%'

    Symfony\Bridge\Monolog\Handler\ElasticsearchLogstashHandler:
      arguments:
        $endpoint:  '%env(ELASTIC_SEARCH_HOST)%:%env(ELASTIC_SEARCH_PORT)%'
        $index: '%env(ELASTIC_INDEX_LOG)%'
        $client: "@elastica.client"
        $level: !php/const Monolog\Logger::ERROR
        $bubble: true
        $elasticsearchVersion: 8.4.3

  ################### Core ############################
    App\:
      resource: '../src/*'
      exclude:
        - '../src/{Traits, DependencyInjection, Kernel.php}'


    App\Services\Logs\ElasticLogger:
      arguments:
#        $logger: '@logger'
        $emergencyIndex: '@elastica.log_index'
        $alertIndex: '@elastica.log_index'
        $criticalIndex: '@elastica.log_index'
        $errorIndex: '@elastica.log_index'
        $warningIndex: '@elastica.log_index'
        $noticeIndex: '@elastica.log_index'
        $infoIndex: '@elastica.log_index'
        $debugIndex: '@elastica.log_index'
        $logIndex: '@elastica.log_index'
#      tags:
#        - { name: monolog.logger, channel: elastic }

##    monolog.elastic:
#      alias: 'App\Common\Logs\ElasticLogger'
#      public: true

#    Psr\Log\LoggerInterface: '@monolog.elastic'
#    monolog.elastica.client:
#        class: Elastica\Client:
#        arguments:
#            $config:
#              servers:
#              - { host: '%env(ELASTIC_SEARCH_HOST)%', port: '%env(ELASTIC_SEARCH_PORT)%', username: '%env(ELASTIC_SEARCH_HTTP_AUTH_USERNAME)%', password: '%env(ELASTIC_SEARCH_HTTP_AUTH_PASSWORD)%', transport: '%env(ELASTIC_TRANSPORT)%', curl: {64: '%env(ELASTIC_SEARCH_SSL_VERIFICATION)%'} }
#              - { host: '%env(ELASTIC_SEARCH_HOST_FAILOVER)%', port: '%env(ELASTIC_SEARCH_PORT_FAILOVER)%', username: '%env(ELASTIC_SEARCH_HTTP_AUTH_USERNAME_FAILOVER)%', password: '%env(ELASTIC_SEARCH_HTTP_AUTH_PASSWORD_FAILOVER)%', transport: '%env(ELASTIC_TRANSPORT_FAILOVER)%', curl: {64: '%env(ELASTIC_SEARCH_SSL_VERIFICATION_FAILOVER)%'} }
#    Psr\Log\LoggerInterface:
#      alias: 'App\Common\Logs\ElasticLogger'
#    Symfony\Bridge\Monolog\Handler\ElasticsearchLogstashHandler: ~
#      arguments:
#        $index: 'log'
#        $client: 'Elastica\Client'
#        $level: !php/const Monolog\Logger::DEBUG
#        $bubble: true
#        $elasticsearchVersion: '8.4.3'

    App\Command\ElasticLogIndexCommand:
      arguments:
        $indexMappings: [
          {
            index: '@elastica.log_index',
            mapping: {
              host: 'keyword',
              message: 'text',
              type: 'bucket',
              channel: 'keyword',
              level: 'text',
              monolog_level: 'number',
              context: 'array',
            }
          }
        ]
      tags:
        - { name: 'console.command' }

    app.listener.redirect_404_to_homepage:
      class: App\EventListener\UserInterface\RedirectHomePage
      arguments:
        - "@router"
      tags:
        - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    App\Events\EventListeners\Authentication\AuthenticationSuccessListener:
        arguments: [ '@request_stack' ]
        tags:
             - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    App\Events\EventListeners\Authentication\JWTAuthenticatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_authenticated, method: onJWTAuthenticated }

    App\Events\Subscribers\Device\DeviceUpdateEventSubscriber:
      calls:
        - setDeviceUpdateProducer: ['@old_sound_rabbit_mq.send_device_settings_update_producer']
  ######################## Producers ######################################################

  ######################## Consumers ######################################################

  ######################## UserInterface Services ######################################################
  App\Services\UserInterface\Cards\CardCreation\CardCreationHandlerInterface:
    alias: App\Services\UserInterface\Cards\CardCreation\CardCreationHandler

  App\Services\UserInterface\Cards\CardPreparation\CardViewFormPreparationHandlerInterface:
    alias: App\Services\UserInterface\Cards\CardPreparation\CardViewFormCreationHandler

  App\Services\UserInterface\Cards\CardViewUpdate\CardViewUpdateInterface:
    alias: App\Services\UserInterface\Cards\CardViewUpdate\CardViewUpdateFacade

  App\UserInterface\Services\NavBar\NavBarDataProviderInterface:
    alias : App\Services\UserInterface\NavBar\NavBarDataProvider
  ######################## New Sensor Creation Services ########################################################

  ######################## Factories ###########################################################################

  ######################## Repositories ########################################################################
  App\Repository\UserInterface\ORM\CardRepositories\CardViewRepositoryInterface:
    alias: App\Repository\UserInterface\ORM\CardRepositories\CardViewRepository

  App\Repository\UserInterface\ORM\CardRepositories\CardColourRepositoryInterface:
    alias: App\Repository\UserInterface\ORM\CardRepositories\CardColourRepository

  App\Repository\UserInterface\ORM\CardRepositories\CardStateRepositoryInterface:
    alias: App\UserInterface\Repository\ORM\CardRepositories\CardStateRepository

  App\Repository\UserInterface\ORM\IconsRepositoryInterface:
    alias: App\Repository\UserInterface\ORM\IconsRepository

  ######################## End Of Sensors ######################################################################################
