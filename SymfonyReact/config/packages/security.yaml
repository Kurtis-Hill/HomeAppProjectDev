security:
    enable_authenticator_manager: true
    password_hashers:
        App\User\Entity\User:
            algorithm: auto
        App\Devices\Entity\Devices:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\User\Entity\User
                property: email
        api_device_provider:
            entity:
                class: App\Devices\Entity\Devices
                property: deviceName
        user_and_device:
            chain:
                providers: [ 'app_user_provider', 'api_device_provider' ]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        device_api:
            pattern: ^/HomeApp/api/device
            stateless: true
            entry_point: jwt
            provider: 'api_device_provider'
            json_login:
                check_path: /HomeApp/api/device/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
            refresh_jwt:
                check_path: /HomeApp/api/device/token/refresh
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        user_api:
            pattern: ^/HomeApp/api/user
            stateless: true
            entry_point: jwt
            provider: 'app_user_provider'
            json_login:
                check_path: /HomeApp/api/user/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
            refresh_jwt:
                check_path: /HomeApp/api/user/token/refresh
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    access_control:
        # Token access
        - { path: ^/HomeApp/api/device/(login_check|token/refresh), roles: PUBLIC_ACCESS }
        - { path: ^/HomeApp/api/user/(login_check|token/refresh), roles: PUBLIC_ACCESS }
        # WebApp un auth access areas
        - { path: ^/HomeApp/WebApp/login, roles: PUBLIC_ACCESS }
        - { path: ^/HomeApp/WebApp/register, roles: PUBLIC_ACCESS }
        # specific api endpoints pending on user
        - { path: ^/HomeApp/api/device, roles: ROLE_DEVICE }
        - { path: ^/HomeApp/api/user, roles: ROLE_USER }

        - { path: ^/HomeApp/WebApp/admin, roles: ROLE_ADMIN }
        - { path: ^/HomeApp/WebApp, roles: IS_AUTHENTICATED_FULLY }
#        DEV
        - { path: ^/HomeApp/ssl, roles: PUBLIC_ACCESS }
        - { path: ^/HomeApp/api/user/csrfToken, roles: PUBLIC_ACCESS }
